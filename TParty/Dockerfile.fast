# Fast TParty Dockerfile with Node.js optimization
FROM node:18-alpine as deps

WORKDIR /app
COPY package*.json ./

# Install dependencies with caching
RUN npm ci --only=production --silent && \
    npm cache clean --force

# Development stage with hot reload
FROM node:18-alpine as development

WORKDIR /app
COPY package*.json ./
RUN npm ci --silent

COPY . .

# Enable fast refresh and hot reload
ENV FAST_REFRESH=true
ENV CHOKIDAR_USEPOLLING=true
ENV WATCHPACK_POLLING=true

EXPOSE 3000
CMD ["npm", "start"]

# Production build stage
FROM deps as production

WORKDIR /app
COPY . .
RUN npm run build

# Serve with nginx
FROM nginx:alpine as serve
COPY --from=production /app/build /usr/share/nginx/html
COPY nginx.conf /etc/nginx/nginx.conf
# Remove default nginx configuration to avoid conflicts
RUN rm /etc/nginx/conf.d/default.conf
EXPOSE 3000
CMD ["nginx", "-g", "daemon off;"]
